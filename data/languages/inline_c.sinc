define pcodeop gte_ldsv_;
define pcodeop gte_ldsxy3;
define pcodeop gte_ldsz3;
define pcodeop gte_ldsz4;
define pcodeop gte_ldbkdir;
define pcodeop gte_SetBackColor;
define pcodeop gte_ldfcdir;
define pcodeop gte_SetFarColor;
define pcodeop gte_SetGeomOffset;
define pcodeop gte_ldtr;
define pcodeop gte_mvlvtr;
define pcodeop gte_FlipRotMatrixX;
define pcodeop gte_FlipTRX;


is_lwc2: is $(AMODE) & REL6=0 & prime=0x32 {}
is_lhu:  is $(AMODE) & prime=0x25 {}
is_sra:  is $(AMODE) & prime=0 & fct=3 & rs=0 & RD {}
is_sll:  is $(AMODE) & prime=0 & fct=0 & rs=0 & RD {}
is_srl:  is $(AMODE) & prime=0 & fct=2 & rs=0 & RD {}
is_or:   is $(AMODE) & prime=0 & fct=0x25 & sa=0 {}
is_mtc2: is $(AMODE) & prime=0x12 & copop=4 {}
is_lbu:  is $(AMODE) & prime=0x24 {}
is_lh:   is $(AMODE) & prime=0x21 {}
is_sb:   is $(AMODE) & prime=0x28 {}
is_sh:   is $(AMODE) & prime=0x29 {}
is_lw:   is $(AMODE) & prime=0x23 {}
is_sw:   is $(AMODE) & prime=0x2B {}
is_ctc2: is $(AMODE) & prime=0x12 & copop=6 {}
is_swc2: is $(AMODE) & prime=0x3A {}
is_cfc2: is $(AMODE) & prime=0x12 & copop=2 {}
is_and:  is $(AMODE) & prime=0 & fct=0x24 & sa=0 {}
is_subu: is $(AMODE) & prime=0 & fct=0x23 & sa=0 & RD {}
is_addu: is $(AMODE) & prime=0 & fct=0x21 & sa=0 & RD {}
is_addi: is $(AMODE) & REL6=0 & prime=8 & RT {}
is_mfc2: is $(AMODE) & prime=0x12 & copop=0 {}

@include "cop2_regs.sinc"

lhu_12_0: is is_lhu & simmed=0 & rt=12 {}
lhu_12_0_1: is is_lhu & simmed=0 & rt=12 {}
lhu_12_0_2: is is_lhu & simmed=0 & rt=12 {}

lhu_13_2: is is_lhu & simmed=2 & rt=13 {}
lhu_13_2_1: is is_lhu & simmed=2 & rt=13 {}
lhu_13_2_2: is is_lhu & simmed=2 & rt=13 {}
lhu_13_4: is is_lhu & simmed=4 & rt=13 {}
lhu_13_6: is is_lhu & simmed=6 & rt=13 {}

lhu_14_4: is is_lhu & simmed=4 & rt=14 {}
lhu_14_4_1: is is_lhu & simmed=4 & rt=14 {}
lhu_14_4_2: is is_lhu & simmed=4 & rt=14 {}
lhu_14_12: is is_lhu & simmed=12 & rt=14 {}

sra_12_12_2: is is_sra & rd=12 & rt=12 & sa=2 {}
sra_12_12_16: is is_sra & rd=12 & rt=12 & sa=16 {}
sra_13_13_16: is is_sra & rd=13 & rt=13 & sa=16 {}
sra_14_14_16_1: is is_sra & rd1=14 & rt1=14 & sa_1=16 {}
sra_14_14_16_2: is is_sra & rd2=14 & rt2=14 & sa_2=16 {}
sra_15_12_16: is is_sra & rd=15 & rt=12 & sa=16 {}
sra_15_13_16: is is_sra & rd=15 & rt=13 & sa=16 {}
sll_12_x_4: is is_sll & rd=12 & sa=4 {}
sll_12_x_16: is is_sll & rd=12 & sa=16 {}
sll_13_x_4: is is_sll & rd=13 & sa=4 {}
sll_13_x_16: is is_sll & rd=13 & sa=16 {}
sll_13_13_16: is is_sll & rd=13 & rt=13 & sa=16 {}
sll_14_12_16: is is_sll & rd=14 & rt=12 & sa=16 {}
sll_14_13_16: is is_sll & rd=14 & rt=13 & sa=16 {}
sll_14_14_16_1: is is_sll & rd1=14 & rt1=14 & sa_1=16 {}
sll_14_14_16_2: is is_sll & rd2=14 & rt2=14 & sa_2=16 {}
sll_15_15_16_1: is is_sll & rd1=15 & rt1=15 & sa_1=16 {}
sll_15_15_16_2: is is_sll & rd2=15 & rt2=15 & sa_2=16 {}
sll_14_x_4: is is_sll & rd=14 & sa=4 {}
srl_14_14_16_1: is is_srl & rd1=14 & rt1=14 & sa_1=16 {}
srl_14_14_16_2: is is_srl & rd2=14 & rt2=14 & sa_2=16 {}

or_12_12_13: is is_or & rd=12 & rs=12 & rt=13 {}
or_14_14_15_1: is is_or & rd1=14 & rs1=14 & rt1=15 {}
or_14_14_15_2: is is_or & rd2=14 & rs2=14 & rt2=15 {}

lbu_12_0: is is_lbu & rt=12 & simmed=0 {}
lbu_12_0_1: is is_lbu & rt=12 & simmed=0 {}
lbu_12_0_2: is is_lbu & rt=12 & simmed=0 {}
lbu_13_1: is is_lbu & rt=13 & simmed=1 {}
lbu_13_1_1: is is_lbu & rt=13 & simmed=1 {}
lbu_13_1_2: is is_lbu & rt=13 & simmed=1 {}
lbu_14_2: is is_lbu & rt=14 & simmed=2 {}
lbu_14_2_1: is is_lbu & rt=14 & simmed=2 {}
lbu_14_2_2: is is_lbu & rt=14 & simmed=2 {}

lh_12_0: is is_lh & rt=12 & simmed=0 {}
lh_12_0_1: is is_lh & rt=12 & simmed=0 {}
lh_12_0_2: is is_lh & rt=12 & simmed=0 {}
lh_13_2: is is_lh & rt=13 & simmed=2 {}
lh_13_2_1: is is_lh & rt=13 & simmed=2 {}
lh_13_2_2: is is_lh & rt=13 & simmed=2 {}
lh_14_4: is is_lh & rt=14 & simmed=4 {}
lh_14_4_1: is is_lh & rt=14 & simmed=4 {}
lh_14_4_2: is is_lh & rt=14 & simmed=4 {}

sb_12_0: is is_sb & rt=12 & simmed=0 {}
sb_13_1: is is_sb & rt=13 & simmed=1 {}
sb_14_2: is is_sb & rt=14 & simmed=2 {}

sh_12_0: is is_sh & rt=12 & simmed=0 {}
sh_13_2: is is_sh & rt=13 & simmed=2 {}
sh_13_6: is is_sh & rt=13 & simmed=6 {}
sh_14_4: is is_sh & rt=14 & simmed=4 {}
sh_14_12: is is_sh & rt=14 & simmed=12 {}
sh_15_2: is is_sh & rt=15 & simmed=2 {}

lw_12_0: is is_lw & rt=12 & simmed=0 {}
lw_12_8: is is_lw & rt=12 & simmed=8 {}
lw_12_20: is is_lw & rt=12 & simmed=20 {}

lw_13_0: is is_lw & rt=13 & simmed=0 {}
lw_13_4: is is_lw & rt=13 & simmed=4 {}
lw_13_8: is is_lw & rt=13 & simmed=8 {}
lw_13_12: is is_lw & rt=13 & simmed=12 {}
lw_13_20: is is_lw & rt=13 & simmed=20 {}
lw_13_24: is is_lw & rt=13 & simmed=24 {}

lw_14_4: is is_lw & rt=14 & simmed=4 {}
lw_14_8: is is_lw & rt=14 & simmed=8 {}
lw_14_12: is is_lw & rt=14 & simmed=12 {}
lw_14_16: is is_lw & rt=14 & simmed=16 {}
lw_14_24: is is_lw & rt=14 & simmed=24 {}
lw_14_28: is is_lw & rt=14 & simmed=28 {}

lw_15_16: is is_lw & rt=15 & simmed=16 {}
lw_15_28: is is_lw & rt=15 & simmed=28 {}

sw_12_0: is is_sw & rt=12 & simmed=0 {}
sw_12_0_1: is is_sw & rt=12 & simmed=0 {}
sw_12_0_2: is is_sw & rt=12 & simmed=0 {}
sw_12_8: is is_sw & rt=12 & simmed=8 {}
sw_12_20: is is_sw & rt=12 & simmed=20 {}

sw_13_0: is is_sw & rt=13 & simmed=0 {}
sw_13_4: is is_sw & rt=13 & simmed=4 {}
sw_13_12: is is_sw & rt=13 & simmed=12 {}
sw_13_24: is is_sw & rt=13 & simmed=24 {}

sw_14_8: is is_sw & rt=14 & simmed=8 {}
sw_14_16: is is_sw & rt=14 & simmed=16 {}
sw_14_28: is is_sw & rt=14 & simmed=28 {}

sw_15_4: is is_sw & rt=15 & simmed=4 {}


and_12_12_13: is is_and & rd=12 & rs=12 & rt=13 {}
subu_12_0_12: is is_subu & rd=12 & rs=0 & rt=12 {}
subu_12_12_13: is is_subu & rd=12 & rs=12 & rt=13 {}
subu_14_0_14_1: is is_subu & rd1=14 & rs1=0 & rt1=14 {}
subu_14_0_14_2: is is_subu & rd2=14 & rs2=0 & rt2=14 {}
subu_15_0_15: is is_subu & rd=15 & rs=0 & rt=15 {}
subu_15_12_13: is is_subu & rd=15 & rs=12 & rt=13 {}
addu_12_12_13: is is_addu & rd=12 & rs=12 & rt=13 {}
addu_15_12_13: is is_addu & rd=15 & rs=12 & rt=13 {}
addi_13_0_4: is is_addi & rt=13 & rs=0 & simmed=4 {}

macro SetMacroArgs1(r0) {
    gte0 = r0;
}

macro SetMacroArgs2(r0,r1) {
    gte0 = r0;
    gte1 = r1;
}

macro SetMacroArgs3(r0,r1,r2) {
    gte0 = r0;
    gte1 = r1;
    gte2 = r2;
}

macro SetMacroArgs4(r0,r1,r2,r3) {
    gte0 = r0;
    gte1 = r1;
    gte2 = r2;
    gte3 = r3;
}

macro SetMacroArgs5(r0,r1,r2,r3,r4) {
    gte0 = r0;
    gte1 = r1;
    gte2 = r2;
    gte3 = r3;
    gte4 = r4;
}

macro SetMacroArgs6(r0,r1,r2,r3,r4,r5) {
    gte0 = r0;
    gte1 = r1;
    gte2 = r2;
    gte3 = r3;
    gte4 = r4;
    gte5 = r5;
}

macro SetMacroArgs7(r0,r1,r2,r3,r4,r5,r6) {
    gte0 = r0;
    gte1 = r1;
    gte2 = r2;
    gte3 = r3;
    gte4 = r4;
    gte5 = r5;
    gte6 = r6;
}

macro SetMacroArgs8(r0,r1,r2,r3,r4,r5,r6,r7) {
    gte0 = r0;
    gte1 = r1;
    gte2 = r2;
    gte3 = r3;
    gte4 = r4;
    gte5 = r5;
    gte6 = r6;
    gte7 = r7;
}

macro SetMacroArgs9(r0,r1,r2,r3,r4,r5,r6,r7,r8) {
    gte0 = r0;
    gte1 = r1;
    gte2 = r2;
    gte3 = r3;
    gte4 = r4;
    gte5 = r5;
    gte6 = r6;
    gte7 = r7;
    gte8 = r8;
}

macro SetMacroArgs10(r0,r1,r2,r3,r4,r5,r6,r7,r8,r9) {
    gte0 = r0;
    gte1 = r1;
    gte2 = r2;
    gte3 = r3;
    gte4 = r4;
    gte5 = r5;
    gte6 = r6;
    gte7 = r7;
    gte8 = r8;
    gte9 = r9;
}

macro SetMacroArgs11(r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10) {
    gte0 = r0;
    gte1 = r1;
    gte2 = r2;
    gte3 = r3;
    gte4 = r4;
    gte5 = r5;
    gte6 = r6;
    gte7 = r7;
    gte8 = r8;
    gte9 = r9;
    gte10 = r10;
}

macro SetMacroArgs12(r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11) {
    gte0 = r0;
    gte1 = r1;
    gte2 = r2;
    gte3 = r3;
    gte4 = r4;
    gte5 = r5;
    gte6 = r6;
    gte7 = r7;
    gte8 = r8;
    gte9 = r9;
    gte10 = r10;
    gte11 = r11;
}

macro SetMacroArgs13(r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12) {
    gte0 = r0;
    gte1 = r1;
    gte2 = r2;
    gte3 = r3;
    gte4 = r4;
    gte5 = r5;
    gte6 = r6;
    gte7 = r7;
    gte8 = r8;
    gte9 = r9;
    gte10 = r10;
    gte11 = r11;
    gte12 = r12;
}

macro SetMacroArgs14(r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13) {
    gte0 = r0;
    gte1 = r1;
    gte2 = r2;
    gte3 = r3;
    gte4 = r4;
    gte5 = r5;
    gte6 = r6;
    gte7 = r7;
    gte8 = r8;
    gte9 = r9;
    gte10 = r10;
    gte11 = r11;
    gte12 = r12;
    gte13 = r13;
}

macro SetMacroArgs15(r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14) {
    gte0 = r0;
    gte1 = r1;
    gte2 = r2;
    gte3 = r3;
    gte4 = r4;
    gte5 = r5;
    gte6 = r6;
    gte7 = r7;
    gte8 = r8;
    gte9 = r9;
    gte10 = r10;
    gte11 = r11;
    gte12 = r12;
    gte13 = r13;
    gte14 = r14;
}

macro SetMacroArgs16(r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15) {
    gte0 = r0;
    gte1 = r1;
    gte2 = r2;
    gte3 = r3;
    gte4 = r4;
    gte5 = r5;
    gte6 = r6;
    gte7 = r7;
    gte8 = r8;
    gte9 = r9;
    gte10 = r10;
    gte11 = r11;
    gte12 = r12;
    gte13 = r13;
    gte14 = r14;
    gte15 = r15;
}

macro GotoMacroFunc(idx) {
	ra = inst_next;
	local tmp:4 = 0x20000000:4 + idx * 4;
	call [tmp];
}

macro MacroCall1(idx,r0) {
    SetMacroArgs1(r0);
    GotoMacroFunc(idx);
}

macro MacroCall2(idx,r0,r1) {
    SetMacroArgs2(r0,r1);
    GotoMacroFunc(idx);
}

macro MacroCall3(idx,r0,r1,r2) {
    SetMacroArgs3(r0,r1,r2);
    GotoMacroFunc(idx);
}

macro MacroCall4(idx,r0,r1,r2,r3) {
    SetMacroArgs4(r0,r1,r2,r3);
    GotoMacroFunc(idx);
}

macro MacroCall5(idx,r0,r1,r2,r3,r4) {
    SetMacroArgs5(r0,r1,r2,r3,r4);
    GotoMacroFunc(idx);
}

macro MacroCall6(idx,r0,r1,r2,r3,r4,r5) {
    SetMacroArgs6(r0,r1,r2,r3,r4,r5);
    GotoMacroFunc(idx);
}

macro MacroCall7(idx,r0,r1,r2,r3,r4,r5,r6) {
    SetMacroArgs7(r0,r1,r2,r3,r4,r5,r6);
    GotoMacroFunc(idx);
}

macro MacroCall8(idx,r0,r1,r2,r3,r4,r5,r6,r7) {
    SetMacroArgs8(r0,r1,r2,r3,r4,r5,r6,r7);
    GotoMacroFunc(idx);
}

macro MacroCall9(idx,r0,r1,r2,r3,r4,r5,r6,r7,r8) {
    SetMacroArgs9(r0,r1,r2,r3,r4,r5,r6,r7,r8);
    GotoMacroFunc(idx);
}

macro MacroCall10(idx,r0,r1,r2,r3,r4,r5,r6,r7,r8,r9) {
    SetMacroArgs10(r0,r1,r2,r3,r4,r5,r6,r7,r8,r9);
    GotoMacroFunc(idx);
}

macro MacroCall11(idx,r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10) {
    SetMacroArgs11(r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10);
    GotoMacroFunc(idx);
}

macro MacroCall12(idx,r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11) {
    SetMacroArgs12(r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11);
    GotoMacroFunc(idx);
}

macro MacroCall13(idx,r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12) {
    SetMacroArgs13(r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12);
    GotoMacroFunc(idx);
}

macro MacroCall14(idx,r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13) {
    SetMacroArgs14(r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13);
    GotoMacroFunc(idx);
}

macro MacroCall15(idx,r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14) {
    SetMacroArgs15(r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14);
    GotoMacroFunc(idx);
}

macro MacroCall16(idx,r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15) {
    SetMacroArgs16(r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15);
    GotoMacroFunc(idx);
}

@include "macro_addrs.sinc"

:ldv0 base  is lwc2_0_0 & base; lwc2_1_4 {
    MacroCall1($(ldv0_idx),base);
}

:ldv1 base  is lwc2_2_0 & base; lwc2_3_4 {
    MacroCall1($(ldv1_idx),base);
}

:ldv2 base  is lwc2_4_0 & base; lwc2_5_4 {
    MacroCall1($(ldv2_idx),base);
}

:ldv3 base1,base2,base3  is lwc2_0_0 & base1; lwc2_1_4; lwc2_2_0 & base2; lwc2_3_4; lwc2_4_0 & base3; lwc2_5_4 {
    MacroCall3($(ldv3_idx),base1,base2,base3);
}

:ldv3c base  is lwc2_0_0 & base; lwc2_1_4; lwc2_2_8; lwc2_3_12; lwc2_4_16; lwc2_5_20 {
    MacroCall1($(ldv3c_idx),base);
}

:ldv3c_vertc base  is lwc2_0_0 & base; lwc2_1_4; lwc2_2_12; lwc2_3_16; lwc2_4_24; lwc2_5_28 {
    MacroCall1($(ldv3c_vertc_idx),base);
}

:ldv01 base1,base2  is lwc2_0_0 & base1; lwc2_1_4; lwc2_2_0 & base2; lwc2_3_4 {
    MacroCall2($(ldv01_idx),base1,base2);
}

:ldv01c base  is lwc2_0_0 & base; lwc2_1_4; lwc2_2_8; lwc2_3_12 {
    MacroCall1($(ldv01c_idx),base);
}

:ldrgb base  is lwc2_6_0 & base {
    MacroCall1($(ldrgb_idx),base);
}

:ldrgb3 base1,base2,base3  is lwc2_20_0 & base1; lwc2_21_0 & base2; lwc2_22_0 & base3; lwc2_6_0 {
    MacroCall3($(ldrgb3_idx),base1,base2,base3);
}

:ldrgb3c base  is lwc2_20_0 & base; lwc2_21_4; lwc2_22_8; lwc2_6_8 {
    MacroCall1($(ldrgb3c_idx),base);
}

:ldlv0 base  is lhu_13_4 & base; lhu_12_0; sll_13_13_16; or_12_12_13; mtc2_12_0; lwc2_1_8 {
    MacroCall1($(ldlv0_idx),base);
}

:ldlvl base  is lwc2_9_0 & base; lwc2_10_4; lwc2_11_8 {
    MacroCall1($(ldlvl_idx),base);
}

:ldsv_ RTsrc1,RTsrc2,RTsrc3  is mtc2_x_9 & RTsrc1; mtc2_x_10 & RTsrc2; mtc2_x_11 & RTsrc3 {
    gte_ldsv_(RTsrc1,RTsrc2,RTsrc3);
}

:ldsv base  is lhu_12_0 & base; lhu_13_2; lhu_14_4; mtc2_12_9; mtc2_13_10; mtc2_14_11 {
    MacroCall1($(ldsv_idx),base);
}

:ldbv base  is lbu_12_0 & base; lbu_13_1; mtc2_12_9; mtc2_13_10 {
    MacroCall1($(ldbv_idx),base);
}

:ldcv base  is lbu_12_0 & base; lbu_13_1; lbu_14_2; mtc2_12_9; mtc2_13_10; mtc2_14_11 {
    MacroCall1($(ldcv_idx),base);
}

ldclmv_2: is lhu_12_0; lhu_13_6; lhu_14_12; mtc2_12_9; mtc2_13_10; mtc2_14_11 {}
ldclmv_3: is lhu_12_0; lhu_13_6; lhu_14_12; mtc2_12_9; mtc2_13_10; mtc2_14_11 {}
:ldclmv base  is lhu_12_0 & base; lhu_13_6; lhu_14_12; mtc2_12_9; mtc2_13_10; mtc2_14_11 {
    MacroCall1($(ldclmv_idx),base);
}

:ldsxy3 RTsrc1,RTsrc2,RTsrc3  is mtc2_x_12 & RTsrc1; mtc2_x_14 & RTsrc3; mtc2_x_13 & RTsrc2 {
    gte_ldsxy3(RTsrc1,RTsrc2,RTsrc3);
}

:ldsxy3c base  is lwc2_12_0 & base; lwc2_13_4; lwc2_14_8 {
    MacroCall1($(ldsxy3c_idx),base);
}

:ldsz3 RTsrc1,RTsrc2,RTsrc3  is mtc2_x_17 & RTsrc1; mtc2_x_18 & RTsrc2; mtc2_x_19 & RTsrc3 {
    gte_ldsz3(RTsrc1,RTsrc2,RTsrc3);
}

:ldsz4 RTsrc1,RTsrc2,RTsrc3,RTsrc4  is mtc2_x_16 & RTsrc1; mtc2_x_17 & RTsrc2; mtc2_x_18 & RTsrc3; mtc2_x_19 & RTsrc4 {
    gte_ldsz4(RTsrc1,RTsrc2,RTsrc3,RTsrc4);
}

:ldopv1 base  is lw_12_0 & base; lw_13_4; ctc2_12_0; lw_14_8; ctc2_13_2; ctc2_14_4 {
    MacroCall1($(ldopv1_idx),base);
}

:ldopv2 base  is lwc2_11_8 & base; lwc2_9_0; lwc2_10_4 {
    MacroCall1($(ldopv2_idx),base);
}

:ldopv1SV base  is lh_12_0 & base; lh_13_2; ctc2_12_0; lh_14_4; ctc2_13_2; ctc2_14_4 {
    MacroCall1($(ldopv1SV_idx),base);
}

:ldopv2SV base  is lh_12_0 & base; lh_13_2; lh_14_4; mtc2_12_9; mtc2_13_10; mtc2_14_11 {
    MacroCall1($(ldopv2SV_idx),base);
}

:ldbkdir RTsrc1,RTsrc2,RTsrc3  is ctc2_x_13 & RTsrc1; ctc2_x_14 & RTsrc2; ctc2_x_15 & RTsrc3 {
    gte_ldbkdir(RTsrc1,RTsrc2,RTsrc3);
}

:SetBackColor RTsrc1,RTsrc2,RTsrc3  is sll_12_x_4 & RTsrc1; sll_13_x_4 & RTsrc2; sll_14_x_4 & RTsrc3; ctc2_12_13; ctc2_13_14; ctc2_14_15 {
    gte_SetBackColor(RTsrc1,RTsrc2,RTsrc3);
}

:ldfcdir RTsrc1,RTsrc2,RTsrc3  is ctc2_x_21 & RTsrc1; ctc2_x_22 & RTsrc2; ctc2_x_23 & RTsrc3 {
    gte_ldfcdir(RTsrc1,RTsrc2,RTsrc3);
}

:SetFarColor RTsrc1,RTsrc2,RTsrc3  is sll_12_x_4 & RTsrc1; sll_13_x_4 & RTsrc2; sll_14_x_4 & RTsrc3; ctc2_12_21; ctc2_13_22; ctc2_14_23 {
    gte_SetFarColor(RTsrc1,RTsrc2,RTsrc3);
}

:SetGeomOffset RTsrc1,RTsrc2  is sll_12_x_16 & RTsrc1; sll_13_x_16 & RTsrc2; ctc2_12_24; ctc2_13_25 {
    gte_SetGeomOffset(RTsrc1,RTsrc2);
}

:ldsvrtrow0 base  is lw_12_0 & base; lw_13_4; ctc2_12_0; ctc2_13_1 {
    MacroCall1($(ldsvrtrow0_idx),base);
}

:SetRotMatrix base  is lw_12_0 & base; lw_13_4; ctc2_12_0; ctc2_13_1; lw_12_8; lw_13_12; lw_14_16; ctc2_12_2; ctc2_13_3; ctc2_14_4 {
	MacroCall1($(SetRotMatrix_idx),base);
}

:SetRotMatrix base  is lw_13_0 & base; lw_14_4; ctc2_13_0; ctc2_14_1; lw_13_8; lw_14_12; lw_15_16; ctc2_13_2; ctc2_14_3; ctc2_15_4 {
	MacroCall1($(SetRotMatrix_idx),base);
}

:ldsvllrow0 base is lw_12_0 & base; lw_13_4; ctc2_12_8; ctc2_13_9 {
	MacroCall1($(ldsvllrow0_idx),base);
} 

:SetLightMatrix base  is lw_12_0 & base; lw_13_4; ctc2_12_8; ctc2_13_9; lw_12_8; lw_13_12; lw_14_16; ctc2_12_10; ctc2_13_11; ctc2_14_12 {
    MacroCall1($(SetLightMatrix_idx),base);
}

:ldsvlcrow0 base  is lw_12_0 & base; lw_13_4; ctc2_12_16; ctc2_13_17 {
    MacroCall1($(ldsvlcrow0_idx),base);
}

:SetColorMatrix base  is lw_12_0 & base; lw_13_4; ctc2_12_16; ctc2_13_17; lw_12_8; lw_13_12; lw_14_16; ctc2_12_18; ctc2_13_19; ctc2_14_20 {
    MacroCall1($(SetColorMatrix_idx),base);
}

:SetTransMatrix base  is lw_12_20 & base; lw_13_24; ctc2_12_5; lw_14_28; ctc2_13_6; ctc2_14_7 {
    MacroCall1($(SetTransMatrix_idx),base);
}

:SetTransMatrix base  is lw_13_20 & base; lw_14_24; ctc2_13_5; lw_15_28; ctc2_14_6; ctc2_15_7 {
    MacroCall1($(SetTransMatrix_idx),base);
}

:ldtr RTsrc1,RTsrc2,RTsrc3  is ctc2_x_5 & RTsrc1; ctc2_x_6 & RTsrc2; ctc2_x_7 & RTsrc3 {
    gte_ldtr(RTsrc1,RTsrc2,RTsrc3);
}

:SetTransVector base  is lw_12_0 & base; lw_13_4; lw_14_8; ctc2_12_5; ctc2_13_6; ctc2_14_7 {
    MacroCall1($(SetTransVector_idx),base);
}

:ld_intpol_uv0 base  is lbu_12_0 & base; lbu_13_1; ctc2_12_21; ctc2_13_22 {
    MacroCall1($(ld_intpol_uv0_idx),base);
}

:ld_intpol_sv0 base is lh_12_0 & base; lh_13_2; lh_14_4; ctc2_12_21; ctc2_13_22; ctc2_14_23 {
	MacroCall1($(ld_intpol_sv0_idx),base);	
}

:ldfc base  is lw_12_0 & base; lw_13_4; lw_14_8; ctc2_12_21; ctc2_13_22; ctc2_14_23 {
    MacroCall1($(ldfc_idx),base);
}

:stsxy base  is swc2_14_0 & base {
    MacroCall1($(stsxy_idx),base);
}

:stsxy3 base1,base2,base3  is swc2_12_0 & base1; swc2_13_0 & base2; swc2_14_0 & base3 {
    MacroCall3($(stsxy3_idx),base1,base2,base3);
}

:stsxy3c base  is swc2_12_0 & base; swc2_13_4; swc2_14_8 {
    MacroCall1($(stsxy3c_idx),base);
}

:stsxy1 base  is swc2_13_0 & base {
    MacroCall1($(stsxy1_idx),base);
}

:stsxy0 base  is swc2_12_0 & base {
    MacroCall1($(stsxy0_idx),base);
}

:stsxy01 base1,base2  is swc2_12_0 & base1; swc2_13_0 & base2 {
    MacroCall2($(stsxy01_idx),base1,base2);
}

:stsxy01c base  is swc2_12_0 & base; swc2_13_4 {
    MacroCall1($(stsxy01c_idx),base);
}

:stsxy3_f3 base  is swc2_12_8 & base; swc2_13_12; swc2_14_16 {
    MacroCall1($(stsxy3_f3_idx),base);
}

:stsxy3_g3 base  is swc2_12_8 & base; swc2_13_16; swc2_14_24 {
    MacroCall1($(stsxy3_g3_idx),base);
}

:stsxy3_gt3 base  is swc2_12_8 & base; swc2_13_20; swc2_14_32 {
    MacroCall1($(stsxy3_gt3_idx),base);
}

:stdp base  is swc2_8_0 & base {
    MacroCall1($(stdp_idx),base);
}

:stflg base  is cfc2_12_31; nop1; sw_12_0 & base {
    MacroCall1($(stflg_idx),base);
}

:stflg_4 base  is cfc2_12_31; addi_13_0_4; sll_13_13_16; and_12_12_13; sw_12_0 & base {
    MacroCall1($(stflg_4_idx),base);
}

:stsz base  is swc2_19_0 & base {
    MacroCall1($(stsz_idx),base);
}

:stsz3 base1,base2,base3  is swc2_17_0 & base1; swc2_18_0 & base2; swc2_19_0 & base3 {
    MacroCall3($(stsz3_idx),base1,base2,base3);
}

:stsz4 base1,base2,base3,base4  is swc2_16_0 & base1; swc2_17_0 & base2; swc2_18_0 & base3; swc2_19_0 & base4 {
    MacroCall4($(stsz4_idx),base1,base2,base3,base4);
}

:stsz3c base  is swc2_17_0 & base; swc2_18_4; swc2_19_8 {
    MacroCall1($(stsz3c_idx),base);
}

:stsz4c base  is swc2_16_0 & base; swc2_17_4; swc2_18_8; swc2_19_12 {
    MacroCall1($(stsz4c_idx),base);
}

:stszotz base  is mfc2_12_19; nop1; sra_12_12_2; sw_12_0 & base {
    MacroCall1($(stszotz_idx),base);
}

:stotz base  is swc2_7_0 & base {
    MacroCall1($(stotz_idx),base);
}

:stopz base  is swc2_24_0 & base {
    MacroCall1($(stopz_idx),base);
}

:stlvl base  is swc2_9_0 & base; swc2_10_4; swc2_11_8 {
    MacroCall1($(stlvl_idx),base);
}

:stlvnl base  is swc2_25_0 & base; swc2_26_4; swc2_27_8 {
    MacroCall1($(stlvnl_idx),base);
}

:stlvnl0 base  is swc2_25_0 & base {
    MacroCall1($(stlvnl0_idx),base);
}

:stlvnl1 base  is swc2_26_0 & base {
    MacroCall1($(stlvnl1_idx),base);
}

:stlvnl2 base  is swc2_27_0 & base {
    MacroCall1($(stlvnl2_idx),base);
}

:stsv base  is mfc2_12_9; mfc2_13_10; mfc2_14_11; sh_12_0 & base; sh_13_2; sh_14_4 {
    MacroCall1($(stsv_idx),base);
}

stclmv_2: is mfc2_12_9; mfc2_13_10; mfc2_14_11; sh_12_0; sh_13_6; sh_14_12 {}
stclmv_3: is mfc2_12_9; mfc2_13_10; mfc2_14_11; sh_12_0; sh_13_6; sh_14_12 {}
:stclmv base  is mfc2_12_9; mfc2_13_10; mfc2_14_11; sh_12_0 & base; sh_13_6; sh_14_12 {
    MacroCall1($(stclmv_idx),base);
}

:stbv base  is mfc2_12_9; mfc2_13_10; sb_12_0 & base; sb_13_1 {
    MacroCall1($(stbv_idx),base);
}

:stcv base  is mfc2_12_9; mfc2_13_10; mfc2_14_11; sb_12_0 & base; sb_13_1; sb_14_2 {
    MacroCall1($(stcv_idx),base);
}

:strgb base  is swc2_22_0 & base {
    MacroCall1($(strgb_idx),base);
}

:strgb3 base1,base2,base3  is swc2_20_0 & base1; swc2_21_0 & base2; swc2_22_0 & base3 {
    MacroCall3($(strgb3_idx),base1,base2,base3);
}

:strgb3_g3 base  is swc2_20_4 & base; swc2_21_12; swc2_22_20 {
    MacroCall1($(strgb3_g3_idx),base);
}

:strgb3_gt3 base  is swc2_20_4 & base; swc2_21_16; swc2_22_28 {
    MacroCall1($(strgb3_gt3_idx),base);
}

:ReadGeomOffset base1,base2  is cfc2_12_24; cfc2_13_25; sra_12_12_16; sra_13_13_16; sw_12_0 & base1; sw_13_0 & base2 {
    MacroCall2($(ReadGeomOffset_idx),base1,base2);
}

:ReadGeomScreen base  is cfc2_12_26; nop1; sw_12_0 & base {
    MacroCall1($(ReadGeomScreen_idx),base);
}

:ReadRotMatrix base  is cfc2_12_0; cfc2_13_1; sw_12_0 & base; sw_13_4; cfc2_12_2; cfc2_13_3; cfc2_14_4; sw_12_8; sw_13_12; sw_14_16; cfc2_12_5; cfc2_13_6; cfc2_14_7; sw_12_20; sw_13_24; sw_14_28 {
    MacroCall1($(ReadRotMatrix_idx),base);
}

:sttr base  is cfc2_12_5; cfc2_13_6; cfc2_14_7; sw_12_0 & base; sw_13_4; sw_14_8 {
    MacroCall1($(sttr_idx),base);
}

:ReadLightMatrix base  is cfc2_12_8; cfc2_13_9; sw_12_0 & base; sw_13_4; cfc2_12_10; cfc2_13_11; cfc2_14_12; sw_12_8; sw_13_12; sw_14_16; cfc2_12_13; cfc2_13_14; cfc2_14_15; sw_12_20; sw_13_24; sw_14_28 {
    MacroCall1($(ReadLightMatrix_idx),base);
}

:ReadColorMatrix base  is cfc2_12_16; cfc2_13_17; sw_12_0 & base; sw_13_4; cfc2_12_18; cfc2_13_19; cfc2_14_20; sw_12_8; sw_13_12; sw_14_16; cfc2_12_21; cfc2_13_22; cfc2_14_23; sw_12_20; sw_13_24; sw_14_28 {
    MacroCall1($(ReadColorMatrix_idx),base);
}

:stlzc base  is swc2_31_0 & base {
    MacroCall1($(stlzc_idx),base);
}

:stfc base  is cfc2_12_21; cfc2_13_22; cfc2_14_23; sw_12_0 & base; sw_13_4; sw_14_8 {
    MacroCall1($(stfc_idx),base);
}

:mvlvtr  is mfc2_12_25; mfc2_13_26; mfc2_14_27; ctc2_12_5; ctc2_13_6; ctc2_14_7 {
    gte_mvlvtr();
}

:subdvl base1,base2,base3  is lw_12_0 & base1; lw_13_0 & base2; mtc2_12_9; mtc2_13_10; sra_12_12_16; sra_13_13_16; subu_15_12_13; mfc2_12_9; mfc2_13_10; sw_15_4 & base3; subu_12_12_13; sw_12_0 {
    MacroCall3($(subdvl_idx),base1,base2,base3);
}

:subdvd base1,base2,base3  is lw_12_0 & base1; lw_13_0 & base2; mtc2_12_9; mtc2_13_10; sra_12_12_16; sra_13_13_16; subu_15_12_13; mfc2_12_9; mfc2_13_10; sh_15_2 & base3; subu_12_12_13; sh_12_0 {
    MacroCall3($(subdvd_idx),base1,base2,base3);
}

:adddvl base1,base2,base3  is lw_12_0 & base1; lw_13_0 & base2; mtc2_12_9; mtc2_13_10; sra_12_12_16; sra_13_13_16; addu_15_12_13; mfc2_12_9; mfc2_13_10; sw_15_4 & base3; addu_12_12_13; sw_12_0 {
    MacroCall3($(adddvl_idx),base1,base2,base3);
}

:adddvd base1,base2,base3  is lw_12_0 & base1; lw_13_0 & base2; mtc2_12_9; mtc2_13_10; sra_12_12_16; sra_13_13_16; addu_15_12_13; mfc2_12_9; mfc2_13_10; sh_15_2 & base3; addu_12_12_13; sh_12_0 {
    MacroCall3($(adddvd_idx),base1,base2,base3);
}

:FlipRotMatrixX  is cfc2_12_0; cfc2_13_1; sll_14_12_16; sra_14_14_16_1; subu_14_0_14_1; sra_15_12_16; subu_15_0_15; sll_15_15_16_1; sll_14_14_16_1; srl_14_14_16_1; or_14_14_15_1; ctc2_14_0; sll_14_13_16; sra_14_14_16_2; subu_14_0_14_2; sra_15_13_16; sll_15_15_16_2; sll_14_14_16_2; srl_14_14_16_2; or_14_14_15_2; ctc2_14_1 {
    gte_FlipRotMatrixX();
}

:FlipTRX  is cfc2_12_5; nop1; subu_12_0_12; ctc2_12_5 {
    gte_FlipTRX();
}

# -------------------------------------- GTENOM_H

define pcodeop read_sz_fifo3;
define pcodeop read_sz_fifo4;
define pcodeop read_sxsy_fifo3;
define pcodeop read_rgb_fifo;
define pcodeop read_mt;

:read_sz_fifo3 RT1,RT2,RT3 is mfc2_x_17 & RT1; mfc2_x_18 & RT2; mfc2_x_19 & RT3 {
	read_sz_fifo3(RT1,RT2,RT3);
}

:read_sz_fifo4 RT1,RT2,RT3,RT4 is mfc2_x_16 & RT1; mfc2_x_17 & RT2; mfc2_x_18 & RT3; mfc2_x_19 & RT4 {
	read_sz_fifo4(RT1,RT2,RT3,RT4);
}

:read_sxsy_fifo3 RT1,RT2,RT3 is mfc2_x_12 & RT1; mfc2_x_13 & RT2; mfc2_x_14 & RT3 {
	read_sxsy_fifo3(RT1,RT2,RT3);
}

:read_rgb_fifo RT1,RT2,RT3 is mfc2_x_20 & RT1; mfc2_x_21 & RT2; mfc2_x_22 & RT3 {
	read_rgb_fifo(RT1,RT2,RT3);
}

:read_mt RT1,RT2,RT3 is mfc2_x_25 & RT1; mfc2_x_26 & RT2; mfc2_x_27 & RT3 {
	read_mt(RT1,RT2,RT3);
}
